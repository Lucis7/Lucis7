Пожалуйста, добавьте способ просмотра дополнительных строк с самой дорогой стоимостью в SQL из предыдущего упражнения. Взгляните на образец данных ниже. Пожалуйста, отсортируйте данные по total_cost, а затем по trip.


WITH tab AS (
    WITH RECURSIVE recur AS (
     SELECT point1,
            point2,
            cost,
            1 as level,
            array[point1] AS path,
            FALSE AS cycle,
            array[cost] AS costs
        from nodes
        where point1 = 'a'

        union all

        select
            nodes.point1,
            nodes.point2,
            nodes.cost + recur.cost as cost,
            recur.level + 1 as level,
            recur.path || nodes.point1 AS path,
            nodes.point1 = ANY(recur.path) AS cycle,
            recur.costs || nodes.cost AS costs
        from nodes
        inner join recur on recur.point2 = nodes.point1 and not cycle
    )

    select
        cost - costs[5] as total_cost,
        path as tour
    from recur
    where level = 5 and 'a' = ANY(path) and 'b' = ANY(path) and 'c' = ANY(path) and 'd' = ANY(path) and path[1] = path[5]
    order by cost, path
)

SELECT DISTINCT *
FROM tab
WHERE total_cost = (SELECT MIN(total_cost) FROM tab)
   OR total_cost = (SELECT MAX(total_cost) FROM tab)
ORDER BY 1,2;
